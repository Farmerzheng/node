Web服务器一般指网站服务器，
是指驻留于因特网上某种计算机程序，
可以向浏览器等Web客户端提供文档，
可以放置网站文件，让全世界浏览
可以放置数据文件，让全世界下载。
目前最主流的三个Web服务器是 Apache Nginx IIS（微软）

WWW 采用的是浏览器/服务器结构
服务器作用是整理和储存各种WWW资源
并响应客户端软件（浏览器）的请求

Web服务器可以解析（handles)HTTP协议。当Web服务器接收到一个HTTP请求（request），会返回一个HTTP响应（response）

服务器端（server-side）程序通常具有
事务处理（transaction processing）
数据库连接（database connectivity）
和消息（messaging）等功能

web服务器与应用服务器

通俗的讲，Web服务器传送页面使浏览器可以浏览，
然而应用程序服务器提供的是客户端应用程序可以调用(call)的方法(methods)。
确切一点：
Web服务器专门处理HTTP请求(request)，
但是应用程序服务器是通过很多协议来为应用程序提供商业逻辑

1。
应用服务器处理业务逻辑，
web服务器则主要是让客户可以通过浏览器进行访问。 
web服务器通常比应用服务器简单

应用服务器：Weblogic、Tomcat、Jboss 
WEB服务器：IIS、 Apache

下面让我们来细细道来：
Web服务器(Web Server)
Web服务器可以解析(handles)HTTP协议
当Web服务器接收到一个HTTP请求(request)
会返回一个HTTP响应(response)
例如送回一个HTML页面。
为了处理一个请求(request)，
Web服务器可以响应(response)一个静态页面或图片，
进行页面跳转(redirect)，
或者把动态响应(dynamic response)的产生委托(delegate)给一些其它的程序
例如
CGI脚本，
JSP(JavaServer Pages)脚本，
servlets，
ASP(Active Server Pages)脚本，
服务器端(server-side)JavaScript，
或者一些其它的服务器端(server-side)技术。
无论它们(译者注：脚本)的目的如何，
这些服务器端(server-side)的程序通常产生一个HTML的响应(response)来让浏览器可以浏览。

Web服务器仅仅提供一个可以执行服务器端(server-side)程序
和返回(程序所产生的)响应(response)的环境，
而不会超出职能范围

Web服务器不支持事务处理或数据库连接池

应用程序服务器(The Application Server)

应用程序服务器通过各种协议，可以包括HTTP，
把商业逻辑暴露给(expose)客户端应用程序。
Web服务器主要是处理向浏览器发送HTML以供浏览
而应用程序服务器提供访问商业逻辑的途径以供客户端应用程序使用。
应用程序使用此商业逻辑就象你调用对象的一个方法(或过程语言中的一个函数)一样。

应用程序服务器的客户端可能会运行在一台PC、一个Web服务器或者甚至是其它的应用程序服务器上。

在大多数情形下，
应用程序服务器是通过组件(component)的应用程序接口(API)把商业逻辑暴露(expose)(给客户端应用程序)的，
例如基于J2EE(Java 2 Platform， Enterprise Edition)应用程序服务器的EJB(Enterprise JavaBean)组件模型。
此外，应用程序服务器可以管理自己的资源，
例如看大门的工作(gate-keeping duties)包括安全(security)，事务处理(transaction processing)，资源池(resource pooling)， 和消息(messaging)

分析Web服务器的不同之处
 

　　一个例子

　　例如，设想一个在线商店(网站)提供实时定价(real-time pricing)和有效性(availability)信息。这个站点(site)很可能会提供一个表单(form)让你来选择产品。当你提交查询(query)后，网站会进行查找(lookup)并把结果内嵌在HTML页面中返回。网站可以有很多种方式来实现这种功能。我要介绍一个不使用应用程序服务器的情景和一个使用应用程序服务器的情景。观察一下这两中情景的不同会有助于你了解应用程序服务器的功能。

　　情景1：不带应用程序服务器的Web服务器

　　在此种情景下，一个Web服务器独立提供在线商店的功能。Web服务器获得你的请求(request)，然后发送给服务器端(server-side)可以处理请求(request)的程序。此程序从数据库或文本文件中查找定价信息。一旦找到，服务器端(server-side)程序把结果信息表示成(formulate)HTML形式，最后Web服务器把会它发送到你的Web浏览器。

　　简而言之，Web服务器只是简单的通过响应(response)HTML页面来处理HTTP请求(request)。

　　情景2：带应用程序服务器的Web服务器

　　情景2和情景1相同的是Web服务器还是把响应(response)的产生委托给脚本。然而，你可以把查找定价的商业逻辑(business logic)放到应用程序服务器上。由于这种变化，此脚本只是简单的调用应用程序服务器的查找服务(lookup service)，而不是已经知道如何查找数据然后表示为一个响应。 这时当该脚本程序产生HTML响应时就可以使用该服务的返回结果了。

　　在此情景中，应用程序服务器提供(serves)了用于查询产品的定价信息的商业逻辑。(服务器的)这种功能没有指出有关显示和客户端如何使用此信息的细节，相反客户端和应用程序服务器只是来回传送数据。当有客户端调用应用程序服务器的查找服务时，此服务只是简单的查找并返回结果给客户端。

　　通过从响应产生HTML的代码中分离出来，在应用程序之中该定价查找逻辑的可重用性更强了。其他的客户端，例如收款机，也可以调用同样的服务(service)来作为一个店员给客户结帐。相反，在情景1中的定价查找服务是不可重用的因为信息内嵌在HTML页中了。

　　总而言之，
在情景2的模型中，在Web服务器通过回应HTML页面来处理HTTP请求，
而应用程序服务器则是通过处理定价和有效性请求来提供应用程序逻辑的。

　　现在大多数应用程序服务器也包含了Web服务器，
这就意味着可以把Web服务器当作是应用程序服务器的一个子集(subset)


DNS服务器（域名服务器）

域名解析就是将人们惯用的域名转换成为机器可读的IP地址的过程
腾讯云解析向全网域名提供免费的智能解析服务
拥有海量处理能力、灵活扩展性和安全能力
为您的站点提供稳定、安全、快速的解析体验

DNS服务器将IP地址与域名进行关联。