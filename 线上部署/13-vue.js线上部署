

好多人把最基本的都忘了
还npm run dev
还守护进程,
用守护进程也应该你自己用nodejs实现一个web静态服务器
而不是去守护npm run dev
既然是布署，
那默认就应该是生产环境下的布署，
vue开发的应用本质上就是静态文件,
无论你用何种web服务器，
放上去就应该能通过http访问
为什么现在好多人连这个都搞不定了呢？
原因在于现在太多的前端工具帮我们做了太多，
而我们只学会了打命令，
而没有搞清楚这些命令到底做了些什么
接下来我来帮大家来捋一捋
首先VUE 是一个javascript的前端框架，
注定了它是运行在浏览器里的，
对服务器本地没有任何要求，
只要一个静态文件
服务器能通过http访问到其资源文件就足矣！
无论你是用apache ,ngnix 就算你要用node 
自己实现一个静态文件服务器，
也用不了多少行代码
。npm run dev 是用来在本地开发的时候做调试用的，
vue开发的是前端的东西，不是nodejs 服务端程序，
按道理讲，生产环境里就不该存在npm，
甚至nodejs也不需要（用nodejs来做web静态服务的除外），
楼主通过ssh进入到服务器里，
再运行npm run dev 来启动哪是开发机上做的事情。
正确的做法很简单，
通过npm run build 
把生成的dist文件夹里的内容上传到http服务器上就可以通过 http来访问了，
开发机上正常，
上传以后程序出现错误
不能运行的原因99.99%的可能性是你引用资源的路径有问题。
一般如果vue框架的程序上传到网站服务器的根目录下是不会有问题的，
也不存在资源文件引用错误的情况，
但如果你不是根目录，
就会有问题，通过vue-cli 生成的开发目录，
build以后默认引用资源文件的路径是：

比如 app.js的引用方式<script type="text/javascript" src="/static/js/app.js"></script>

1、修改config文件下的index.js

将     
assetsPublicPath: '/',
改为
assetsPublicPath: './'

2、项目打包
npm run build
生成一个dist目录，
这个文件夹就是我们要部署上线的项目

3、
